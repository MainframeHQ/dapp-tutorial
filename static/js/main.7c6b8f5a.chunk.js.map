{"version":3,"sources":["messages.js","components/Context.js","components/Candidate.js","components/CandidatesCard.js","components/AdminArea.js","components/UserArea.js","components/TopBar.js","components/Error.js","components/Home.js","contract-address.js","components/App.js","serviceWorker.js","index.js"],"names":["src_messages","en","dappName","homeError","admTitle","electorsWaiting","approveButton","addCandidateTitle","candidateField","saveButton","electorTitle","candidatesTitle","noCandidates","thanksVoted","pendingApproval","voteButton","requestTitle","ethAddress","requestAccessButton","pt","createContext","language","messages","MESSAGES","user","candidates","pendingVoters","vote","candidate","approve","voter","requestApproval","setLanguage","Provider","Consumer","Context","Component","props","react_default","a","createElement","value","Object","assign","CandidateWithStyles","withStyles","theme","badge","top","right","left","fontSize","padding","concat","spacing","unit","selected","background","color","_ref","classes","name","votes","onSelect","listClasses","push","Fragment","Divider_default","ListItem_default","role","undefined","dense","button","onClick","className","Badge_default","badgeContent","ListItemText_default","primary","CadidatesCard","state","selectCandidate","_this","registration","voted","setState","_this2","this","_this$props","Typography_default","variant","component","Card_default","card","CardContent_default","title","length","List_default","map","item","index","components_Candidate","key","Button_default","disabled","applyContext","marginTop","minWidth","width","margin","display","AdminArea","checked","toggleItem","indexOf","filter","toConsumableArray","batchApprove","setName","event","target","registerCandidate","addCandidate","substring","adminTile","Checkbox_default","tabIndex","disableRipple","TextField_default","required","onChange","id","label","textField","findIndex","UserArea","address","TopBar","anchorEl","handleClick","currentTarget","handleClose","AppBar_default","bar","position","Toolbar_default","grow","aria-owns","aria-haspopup","Menu_default","open","Boolean","onClose","MenuItem_default","height","flexGrow","error","textAlign","message","root","minHeight","flex","main","flexDirection","alignItems","justifyContent","components_TopBar","CandidatesCard","components_UserArea","admin","components_AdminArea","components_Error","contract_address","AppProvider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","regenerator_default","mark","_callee","contract","hexName","wrap","_context","prev","next","abrupt","Error","utils","utf8ToHex","Promise","resolve","reject","methods","voteForCandidate","send","from","on","receipt","stop","_x","apply","arguments","_ref2","_callee2","ownAddr","_context2","approveRegistration","_x2","_ref3","_callee3","_context3","getContractState","_x3","_callee4","_context4","registerVoter","_ref5","_callee5","voters","_context5","approveRegistrations","_x4","window","web3","Web3","currentProvider","eth","Contract","abi","CONTRACT","timeout","setInterval","getCoinbase","userAddress","voterIsRegistered","registered","owner","userData","toLowerCase","registrationIsApproved","voterHasVoted","hasVoted","fetchCandidates","fetchPendingVoters","uniq","console","warn","_context7","t0","getCandidateCount","count","i","getCandidateNameForIndex","bytesName","getVoteCountForCandidate","hexToUtf8","registrations","getRegistrationCount","getRegistrationForIndex","objectSpread","components_Home","location","hostname","match","ReactDOM","render","App_AppProvider","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.7c6b8f5a.chunk.js","sourcesContent":["export default {\n  en: {\n    dappName: \"Mainframe - Election Dapp\",\n    homeError:\n      \"Oops, seems like you don't have MetaMask installed or you're connected to the wrong network.\",\n    admTitle: \"Admin Area\",\n    electorsWaiting: \"Voters waiting for approval\",\n    approveButton: \"Approve\",\n    addCandidateTitle: \"Add Candidate\",\n    candidateField: \"Candidate name\",\n    saveButton: \"Save\",\n    electorTitle: \"Voter Area\",\n    candidatesTitle: \"Presidential Candidates\",\n    noCandidates: \"No candidates available.\",\n    thanksVoted: \"Thanks! Your vote has been computed!\",\n    pendingApproval: \"Your request is waiting to be approved!\",\n    voteButton: \"Vote\",\n    requestTitle: \"You need to request admin approval to be able to vote,\",\n    ethAddress: \"Your ETH address is:\",\n    requestAccessButton: \"Request Access\"\n  },\n  pt: {\n    dappName: \"Mainframe - Dapp de Eleições\",\n    homeError:\n      \"Eita, parece que você não tem o MetaMask instalado, ou não está conectado na rede correta.\",\n    admTitle: \"Área do Administrador\",\n    electorsWaiting: \"Eleitores esperando aprovação.\",\n    approveButton: \"Aprovar\",\n    addCandidateTitle: \"Cadastrar um candidato\",\n    candidateField: \"Nome do Candidato\",\n    saveButton: \"Salvar\",\n    electorTitle: \"Área do Eleitor\",\n    candidatesTitle: \"Candidatos à presidência da república\",\n    noCandidates: \"Não existem candidatos cadastrados.\",\n    thanksVoted: \"Obrigado! Seu voto já foi computado!\",\n    pendingApproval: \"Sua solicitação está aguardando aprovação!\",\n    voteButton: \"Votar\",\n    requestTitle: \"Para votar, você precisa solicitar acesso ao Administrador,\",\n    ethAddress: \"O seu endereço ETH é:\",\n    requestAccessButton: \"Solicitar Acesso\"\n  }\n};\n","import React, { createContext } from \"react\";\nimport MESSAGES from \"../messages\";\n\nexport const { Provider, Consumer } = createContext({\n  language: \"en\",\n  messages: MESSAGES.en,\n  user: {},\n  candidates: [],\n  pendingVoters: [],\n  vote: candidate => {\n    return null;\n  },\n  approve: voter => {\n    return null;\n  },\n  requestApproval: voter => {\n    return null;\n  },\n  setLanguage: language => {}\n});\n\nexport default Component => {\n  return props => (\n    <Consumer>{value => <Component {...props} {...value} />}</Consumer>\n  );\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst Candidate = ({ classes, name, votes, onSelect, selected }) => {\n  const listClasses = [];\n  if (selected) {\n    listClasses.push(classes.selected);\n  }\n  return (\n    <>\n      <Divider />\n      <ListItem\n        role={undefined}\n        dense\n        button\n        onClick={() => onSelect(name)}\n        className={listClasses}\n      >\n        <Badge\n          color=\"primary\"\n          badgeContent={votes}\n          classes={{ badge: classes.badge }}\n        >\n          <ListItemText primary={name} className={classes.candidate} />\n        </Badge>\n      </ListItem>\n    </>\n  );\n};\n\nconst styles = theme => ({\n  badge: {\n    top: 10,\n    right: \"auto\",\n    left: 0\n  },\n  candidate: {\n    fontSize: 16,\n    padding: `10px 0 10px ${theme.spacing.unit * 4}px!important`\n  },\n  selected: {\n    background: \"yellow\",\n    color: \"white\"\n  }\n});\n\nconst CandidateWithStyles = withStyles(styles)(Candidate);\n\nexport default CandidateWithStyles;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport List from \"@material-ui/core/List\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Candidate from \"./Candidate\";\n\nimport applyContext from \"./Context\";\n\nclass CadidatesCard extends Component {\n  state = {\n    candidate: \"\"\n  };\n\n  selectCandidate = candidate => {\n    this.props.user.registration === \"approved\" &&\n      !this.props.user.voted &&\n      this.setState({ candidate });\n  };\n\n  vote = () => {\n    this.props.vote(this.state.candidate);\n    this.setState({ candidate: \"\" });\n  };\n\n  render() {\n    const { classes, candidates, user, messages } = this.props;\n    return (\n      <>\n        <Typography\n          variant=\"h5\"\n          component=\"h1\"\n          className={classes.electorTitle}\n        >\n          {messages.electorTitle}\n        </Typography>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              {candidates.length > 0\n                ? messages.candidatesTitle\n                : messages.noCandidates}\n            </Typography>\n            <List>\n              {candidates.map((item, index) => (\n                <Candidate\n                  onSelect={this.selectCandidate}\n                  selected={\n                    !user.voted &&\n                    user.registration === \"approved\" &&\n                    this.state.candidate === item.name\n                  }\n                  key={`candidate-${index}`}\n                  name={item.name}\n                  votes={item.votes}\n                />\n              ))}\n            </List>\n            {user.voted && (\n              <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n                {messages.thanksVoted}\n              </Typography>\n            )}\n            {user.registration === \"pendingApproval\" && (\n              <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n                {messages.pendingApproval}\n              </Typography>\n            )}\n          </CardContent>\n\n          {user.registration === \"approved\" &&\n            !user.voted && (\n              <Button\n                disabled={!this.state.candidate}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.vote}\n                className={classes.button}\n              >\n                {messages.voteButton}\n              </Button>\n            )}\n        </Card>\n      </>\n    );\n  }\n}\nconst styles = () => ({\n  electorTitle: {\n    marginTop: 60\n  },\n  title: {\n    padding: \"20px 0\"\n  },\n  card: {\n    marginTop: 20,\n    minWidth: 275,\n    width: \"80vw\"\n  },\n  button: {\n    margin: \"20px auto\",\n    display: \"block\"\n  }\n});\n\nconst CadidatesCardStyled = withStyles(styles)(CadidatesCard);\n\nexport default applyContext(CadidatesCardStyled);\n","import React, { Component } from \"react\";\nimport { findIndex } from \"lodash\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport applyContext from \"./Context\";\n\nclass AdminArea extends Component {\n  state = {\n    checked: [],\n    name: \"\"\n  };\n\n  toggleItem = item => {\n    if (this.state.checked.indexOf(item) !== -1) {\n      this.setState({\n        checked: this.state.checked.filter(value => value !== item)\n      });\n    } else {\n      this.setState({\n        checked: [...this.state.checked, item]\n      });\n    }\n  };\n\n  approve = () => {\n    this.props.batchApprove(this.state.checked);\n    this.setState({\n      checked: []\n    });\n  };\n\n  setName = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  registerCandidate = () => {\n    this.props.addCandidate(this.state.name.substring(0, 32));\n    this.setState({ name: \"\" });\n  };\n\n  render() {\n    const { classes, pendingVoters, messages } = this.props;\n    return (\n      <>\n        <Typography variant=\"h5\" component=\"h1\" className={classes.adminTile}>\n          {messages.admTitle}\n        </Typography>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              {messages.electorsWaiting}\n            </Typography>\n\n            <List>\n              {pendingVoters.map(item => (\n                <ListItem\n                  key={item}\n                  role={undefined}\n                  dense\n                  button\n                  onClick={() => this.toggleItem(item)}\n                >\n                  <Checkbox\n                    checked={this.state.checked.indexOf(item) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                  <ListItemText primary={item} />\n                </ListItem>\n              ))}\n            </List>\n            <Button\n              disabled={this.state.checked.length === 0}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.approve}\n              className={classes.button}\n            >\n              {messages.approveButton}\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              {messages.addCandidateTitle}\n            </Typography>\n            <TextField\n              required\n              onChange={this.setName}\n              id=\"outlined-required\"\n              label={messages.candidateField}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={this.state.name}\n            />\n            <Button\n              disabled={\n                this.state.name.length === 0 ||\n                findIndex(\n                  this.props.candidates,\n                  item => item.name === this.state.name\n                ) >= 0\n              }\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.registerCandidate}\n              className={classes.button}\n            >\n              {messages.saveButton}\n            </Button>\n          </CardContent>\n        </Card>\n      </>\n    );\n  }\n}\nconst styles = () => ({\n  adminTile: {\n    marginTop: 60\n  },\n  title: {\n    padding: \"20px 0\"\n  },\n  card: {\n    marginTop: 20,\n    minWidth: 275,\n    width: \"80vw\"\n  },\n  button: {\n    margin: \"20px auto\",\n    display: \"block\"\n  },\n  textField: {\n    width: \"100%\"\n  }\n});\n\nconst AdminAreaStyled = withStyles(styles)(AdminArea);\n\nexport default applyContext(AdminAreaStyled);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport applyContext from \"./Context\";\n\nclass UserArea extends Component {\n  render() {\n    const { classes, user, messages } = this.props;\n    if (user.registration === \"pendingRegistration\") {\n      return (\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              {messages.requestTitle}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h5\" className={classes.title}>\n              {messages.ethAddress} {user.address}\n            </Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.props.requestApproval}\n              className={classes.button}\n            >\n              {messages.requestAccessButton}\n            </Button>\n          </CardContent>\n        </Card>\n      );\n    }\n    return null;\n  }\n}\nconst styles = () => ({\n  title: {\n    padding: \"20px 0\"\n  },\n  card: {\n    marginTop: 20,\n    minWidth: 275,\n    width: \"80vw\"\n  },\n  button: {\n    margin: \"20px auto\",\n    display: \"block\"\n  },\n  textField: {\n    width: \"100%\"\n  }\n});\n\nconst UserAreaStyled = withStyles(styles)(UserArea);\n\nexport default applyContext(UserAreaStyled);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport applyContext from \"./Context\";\n\nclass TopBar extends Component {\n  state = {\n    anchorEl: null\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = language => {\n    this.props.setLanguage(language);\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { classes, messages, language } = this.props;\n    const { anchorEl } = this.state;\n\n    return (\n      <AppBar className={classes.bar} position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            {messages.dappName}\n          </Typography>\n          <Button\n            aria-owns={anchorEl ? \"simple-menu\" : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n            className={classes.language}\n          >\n            {language === \"en\" ? \"English\" : \"Português (BR)\"}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem onClick={() => this.handleClose(\"en\")}>English</MenuItem>\n            <MenuItem onClick={() => this.handleClose(\"pt\")}>\n              Português (BR)\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst styles = () => ({\n  bar: {\n    height: 70\n  },\n  grow: {\n    flexGrow: 1\n  },\n  language: {\n    color: \"white\"\n  }\n});\n\nconst TopBarStyled = withStyles(styles)(TopBar);\nexport default applyContext(TopBarStyled);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Error = props => {\n  const { classes, message } = props;\n  return (\n    <Typography variant=\"h6\" color=\"inherit\" className={classes.error}>\n      {message}\n    </Typography>\n  );\n};\n\nconst styles = () => ({\n  error: {\n    flexGrow: 1,\n    padding: 20,\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});\n\nexport default withStyles(styles)(Error);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CandidatesCard from \"./CandidatesCard\";\nimport AdminArea from \"./AdminArea\";\nimport UserArea from \"./UserArea\";\n\nimport TopBar from \"./TopBar\";\nimport Error from \"./Error\";\n\nimport applyContext from \"./Context\";\n\nconst Home = props => {\n  const { classes, user, messages } = props;\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.main}>\n        {user.address ? (\n          <>\n            <CandidatesCard />\n            <UserArea />\n            {user.admin && <AdminArea />}\n          </>\n        ) : (\n          <Error message={messages.homeError} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst styles = () => ({\n  root: {\n    minHeight: \"100vh\",\n    flex: 1,\n    flexGrow: 1,\n    background: \"#d3d3d3\"\n  },\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nconst StyledHome = withStyles(styles)(Home);\nexport default applyContext(StyledHome);\n","export default \"0x8700269ffb81ace4784ab27ecf9a633326c478e3\";\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport utils from \"web3-utils\";\nimport { uniq } from \"lodash\";\n\nimport abi from \"../election-abi.json\";\n\nimport { Provider } from \"./Context\";\n\nimport Home from \"./Home\";\n\nimport CONTRACT from \"../contract-address\";\n\nimport MESSAGES from \"../messages\";\n\nexport default class AppProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    const state = {\n      language: \"pt\",\n      user: {},\n      candidates: [],\n      pendingVoters: []\n    };\n\n    if (window.web3) {\n      state.web3 = new Web3(window.web3.currentProvider);\n      state.contract = new state.web3.eth.Contract(abi, CONTRACT);\n    }\n\n    this.state = state;\n  }\n\n  async componentDidMount() {\n    this.getContractState();\n\n    this.timeout = setInterval(() => this.getContractState(), 2000);\n  }\n\n  componentWillUnmount() {\n    this.timeout && this.timeout();\n  }\n\n  async getContractState() {\n    const { web3, contract } = this.state;\n    if (web3 && contract) {\n      try {\n        const userAddress = await web3.eth.getCoinbase();\n        const registered = await contract.methods\n          .voterIsRegistered(userAddress)\n          .call();\n\n        const owner = await contract.methods.owner().call();\n        const userData = {\n          registration: registered ? \"pendingApproval\" : \"pendingRegistration\",\n          admin: owner.toLowerCase() === userAddress.toLowerCase(),\n          address: userAddress.toLowerCase()\n        };\n        if (registered) {\n          const approved = await contract.methods\n            .registrationIsApproved(userAddress)\n            .call();\n          if (approved) {\n            userData.registration = \"approved\";\n            const hasVoted = await contract.methods\n              .voterHasVoted(userAddress)\n              .call();\n            userData.voted = hasVoted;\n          }\n        }\n        const candidates = await this.fetchCandidates(this.state.contract);\n        const pendingVoters = await this.fetchPendingVoters();\n        this.setState({\n          pendingVoters: uniq(pendingVoters),\n          candidates,\n          user: userData\n        });\n      } catch (err) {\n        console.warn(\"err: \", err);\n      }\n    }\n  }\n\n  async fetchCandidates() {\n    const { contract } = this.state;\n    const candidates = [];\n    const count = await contract.methods.getCandidateCount().call();\n    for (let i = 0; i < count; i++) {\n      const bytesName = await contract.methods\n        .getCandidateNameForIndex(i)\n        .call();\n      const votes = await contract.methods\n        .getVoteCountForCandidate(bytesName)\n        .call();\n      candidates.push({\n        name: utils.hexToUtf8(bytesName),\n        votes\n      });\n    }\n    return candidates;\n  }\n\n  async fetchPendingVoters() {\n    const { contract } = this.state;\n    const registrations = [];\n    const count = await contract.methods.getRegistrationCount().call();\n    for (let i = 0; i < count; i++) {\n      const address = await contract.methods.getRegistrationForIndex(i).call();\n      const registered = await contract.methods\n        .registrationIsApproved(address)\n        .call();\n      if (!registered) {\n        registrations.push(address);\n      }\n    }\n    return registrations;\n  }\n\n  // Web3 Calls\n\n  vote = async name => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const hexName = utils.utf8ToHex(name);\n    const address = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .voteForCandidate(hexName)\n        .send({ from: address })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  approve = async address => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const ownAddr = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .approveRegistration(address)\n        .send({ from: ownAddr })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  addCandidate = async name => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const hexName = utils.utf8ToHex(name);\n    const address = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .addCandidate(hexName)\n        .send({ from: address })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n          this.getContractState();\n        });\n    });\n  };\n\n  requestApproval = async () => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const address = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .registerVoter()\n        .send({ from: address })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  batchApprove = async voters => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const ownAddr = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .approveRegistrations(voters)\n        .send({ from: ownAddr })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  setLanguage = language => {\n    this.setState({ language });\n  };\n\n  // Render\n\n  render() {\n    if (!this.state.web3) {\n      return <span>{MESSAGES.en.homeError}</span>;\n    }\n    return (\n      <Provider\n        value={{\n          vote: this.vote,\n          approve: this.approve,\n          requestApproval: this.requestApproval,\n          addCandidate: this.addCandidate,\n          batchApprove: this.batchApprove,\n          messages: MESSAGES[this.state.language],\n          setLanguage: this.setLanguage,\n          ...this.state\n        }}\n      >\n        <Home />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}