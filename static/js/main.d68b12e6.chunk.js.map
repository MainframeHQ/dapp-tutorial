{"version":3,"sources":["messages.js","components/Context.js","components/Candidate.js","components/CandidatesCard.js","components/AdminArea.js","components/UserArea.js","components/TopBar.js","components/Error.js","components/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["src_messages","en","dappName","homeError","admTitle","electorsWaiting","approveButton","addCandidateTitle","candidateField","saveButton","electorTitle","candidatesTitle","noCandidates","thanksVoted","pendingApproval","voteButton","requestTitle","ethAddress","requestAccessButton","pt","createContext","messages","MESSAGES","user","candidates","pendingVoters","vote","candidate","approve","voter","requestApproval","Provider","Consumer","Context","Component","props","react_default","a","createElement","value","Object","assign","CandidateWithStyles","withStyles","theme","badge","top","right","left","fontSize","padding","concat","spacing","unit","selected","background","color","_ref","classes","name","votes","onSelect","listClasses","push","Fragment","Divider_default","ListItem_default","role","undefined","dense","button","onClick","className","Badge_default","badgeContent","ListItemText_default","primary","CadidatesCard","state","selectCandidate","_this","registration","voted","setState","_this2","this","_this$props","Typography_default","variant","component","Card_default","card","CardContent_default","title","length","List_default","map","item","index","components_Candidate","key","Button_default","disabled","applyContext","marginTop","minWidth","width","margin","display","AdminArea","checked","toggleItem","indexOf","filter","toConsumableArray","batchApprove","setName","event","target","registerCandidate","addCandidate","substring","adminTile","Checkbox_default","tabIndex","disableRipple","TextField_default","required","onChange","id","label","textField","findIndex","UserArea","address","bar","height","grow","flexGrow","AppBar_default","position","Toolbar_default","error","textAlign","message","root","minHeight","flex","main","flexDirection","alignItems","justifyContent","components_TopBar","CandidatesCard","components_UserArea","admin","components_AdminArea","components_Error","CONTRACT","AppProvider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","regenerator_default","mark","_callee","contract","hexName","wrap","_context","prev","next","abrupt","Error","utils","utf8ToHex","Promise","resolve","reject","methods","voteForCandidate","send","from","on","receipt","stop","_x","apply","arguments","_ref2","_callee2","ownAddr","_context2","approveRegistration","_x2","_ref3","_callee3","_context3","getContractState","_x3","_callee4","_context4","registerVoter","_ref5","_callee5","voters","_context5","approveRegistrations","_x4","window","web3","Web3","currentProvider","eth","Contract","abi","timeout","setInterval","getCoinbase","userAddress","voterIsRegistered","registered","owner","userData","toLowerCase","registrationIsApproved","voterHasVoted","hasVoted","fetchCandidates","fetchPendingVoters","uniq","console","warn","_context7","t0","getCandidateCount","count","i","getCandidateNameForIndex","bytesName","getVoteCountForCandidate","hexToUtf8","registrations","getRegistrationCount","getRegistrationForIndex","objectSpread","components_Home","Boolean","location","hostname","match","ReactDOM","render","App_AppProvider","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.d68b12e6.chunk.js","sourcesContent":["export default {\n  en: {\n    dappName: \"Mainframe MeetUp - Elections Dapp\",\n    homeError:\n      \"Oops, seems like you don't have MetaMask installed or you're connected to the wrong network.\",\n    admTitle: \"Admin Area\",\n    electorsWaiting: \"Voters waiting for approval\",\n    approveButton: \"Approve\",\n    addCandidateTitle: \"Add Candidate\",\n    candidateField: \"Candidate name\",\n    saveButton: \"Save\",\n    electorTitle: \"Voter Area\",\n    candidatesTitle: \"Presidential Candidates\",\n    noCandidates: \"No candidates available.\",\n    thanksVoted: \"Thanks! Your vote has been computed!\",\n    pendingApproval: \"Your request is waiting to be approved!\",\n    voteButton: \"Vote\",\n    requestTitle: \"You need to request admin approval to be able to vote,\",\n    ethAddress: \"Your ETH address is:\",\n    requestAccessButton: \"Request Access\"\n  },\n  pt: {\n    dappName: \"Mainframe MeetUp - Dapp de Eleições\",\n    homeError:\n      \"Eita, parece que você não tem o MetaMask instalado, ou não está conectado na rede correta.\",\n    admTitle: \"Área do Administrador\",\n    electorsWaiting: \"Eleitores esperando aprovação.\",\n    approveButton: \"Aprovar\",\n    addCandidateTitle: \"Cadastrar um candidato\",\n    candidateField: \"Nome do Candidato\",\n    saveButton: \"Salvar\",\n    electorTitle: \"Área do Eleitor\",\n    candidatesTitle: \"Candidatos à presidência da república\",\n    noCandidates: \"Não existem candidatos cadastrados.\",\n    thanksVoted: \"Obrigado! Seu voto já foi computado!\",\n    pendingApproval: \"Sua solicitação está aguardando aprovação!\",\n    voteButton: \"Votar\",\n    requestTitle: \"Para votar, você precisa solicitar acesso ao Administrador,\",\n    ethAddress: \"O seu endereço ETH é:\",\n    requestAccessButton: \"Solicitar Acesso\"\n  }\n};\n","import React, { createContext } from \"react\";\nimport MESSAGES from \"../messages\";\n\nexport const { Provider, Consumer } = createContext({\n  messages: MESSAGES.en,\n  user: {},\n  candidates: [],\n  pendingVoters: [],\n  vote: candidate => {\n    return null;\n  },\n  approve: voter => {\n    return null;\n  },\n  requestApproval: voter => {\n    return null;\n  }\n});\n\nexport default Component => {\n  return props => (\n    <Consumer>{value => <Component {...props} {...value} />}</Consumer>\n  );\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst Candidate = ({ classes, name, votes, onSelect, selected }) => {\n  const listClasses = [];\n  if (selected) {\n    listClasses.push(classes.selected);\n  }\n  return (\n    <>\n      <Divider />\n      <ListItem\n        role={undefined}\n        dense\n        button\n        onClick={() => onSelect(name)}\n        className={listClasses}\n      >\n        <Badge\n          color=\"primary\"\n          badgeContent={votes}\n          classes={{ badge: classes.badge }}\n        >\n          <ListItemText primary={name} className={classes.candidate} />\n        </Badge>\n      </ListItem>\n    </>\n  );\n};\n\nconst styles = theme => ({\n  badge: {\n    top: 10,\n    right: \"auto\",\n    left: 0\n  },\n  candidate: {\n    fontSize: 16,\n    padding: `10px 0 10px ${theme.spacing.unit * 4}px!important`\n  },\n  selected: {\n    background: \"yellow\",\n    color: \"white\"\n  }\n});\n\nconst CandidateWithStyles = withStyles(styles)(Candidate);\n\nexport default CandidateWithStyles;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport List from \"@material-ui/core/List\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Candidate from \"./Candidate\";\n\nimport applyContext from \"./Context\";\n\nclass CadidatesCard extends Component {\n  state = {\n    candidate: \"\"\n  };\n\n  selectCandidate = candidate => {\n    this.props.user.registration === \"approved\" &&\n      !this.props.user.voted &&\n      this.setState({ candidate });\n  };\n\n  vote = () => {\n    this.props.vote(this.state.candidate);\n    this.setState({ candidate: \"\" });\n  };\n\n  render() {\n    const { classes, candidates, user, messages } = this.props;\n    return (\n      <>\n        <Typography\n          variant=\"h5\"\n          component=\"h1\"\n          className={classes.electorTitle}\n        >\n          {messages.electorTitle}\n        </Typography>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              {candidates.length > 0\n                ? messages.candidatesTitle\n                : messages.noCandidates}\n            </Typography>\n            <List>\n              {candidates.map((item, index) => (\n                <Candidate\n                  onSelect={this.selectCandidate}\n                  selected={\n                    !user.voted &&\n                    user.registration === \"approved\" &&\n                    this.state.candidate === item.name\n                  }\n                  key={`candidate-${index}`}\n                  name={item.name}\n                  votes={item.votes}\n                />\n              ))}\n            </List>\n            {user.voted && (\n              <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n                {messages.thanksVoted}\n              </Typography>\n            )}\n            {user.registration === \"pendingApproval\" && (\n              <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n                {messages.pendingApproval}\n              </Typography>\n            )}\n          </CardContent>\n\n          {user.registration === \"approved\" &&\n            !user.voted && (\n              <Button\n                disabled={!this.state.candidate}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.vote}\n                className={classes.button}\n              >\n                {messages.voteButton}\n              </Button>\n            )}\n        </Card>\n      </>\n    );\n  }\n}\nconst styles = () => ({\n  electorTitle: {\n    marginTop: 60\n  },\n  title: {\n    padding: \"20px 0\"\n  },\n  card: {\n    marginTop: 20,\n    minWidth: 275,\n    width: \"80vw\"\n  },\n  button: {\n    margin: \"20px auto\",\n    display: \"block\"\n  }\n});\n\nconst CadidatesCardStyled = withStyles(styles)(CadidatesCard);\n\nexport default applyContext(CadidatesCardStyled);\n","import React, { Component } from \"react\";\nimport { findIndex } from \"lodash\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport applyContext from \"./Context\";\n\nclass AdminArea extends Component {\n  state = {\n    checked: [],\n    name: \"\"\n  };\n\n  toggleItem = item => {\n    if (this.state.checked.indexOf(item) !== -1) {\n      this.setState({\n        checked: this.state.checked.filter(value => value !== item)\n      });\n    } else {\n      this.setState({\n        checked: [...this.state.checked, item]\n      });\n    }\n  };\n\n  approve = () => {\n    this.props.batchApprove(this.state.checked);\n    this.setState({\n      checked: []\n    });\n  };\n\n  setName = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  registerCandidate = () => {\n    this.props.addCandidate(this.state.name.substring(0, 32));\n    this.setState({ name: \"\" });\n  };\n\n  render() {\n    const { classes, pendingVoters, messages } = this.props;\n    return (\n      <>\n        <Typography variant=\"h5\" component=\"h1\" className={classes.adminTile}>\n          {messages.admTitle}\n        </Typography>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              {messages.electorsWaiting}\n            </Typography>\n\n            <List>\n              {pendingVoters.map(item => (\n                <ListItem\n                  key={item}\n                  role={undefined}\n                  dense\n                  button\n                  onClick={() => this.toggleItem(item)}\n                >\n                  <Checkbox\n                    checked={this.state.checked.indexOf(item) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                  <ListItemText primary={item} />\n                </ListItem>\n              ))}\n            </List>\n            <Button\n              disabled={this.state.checked.length === 0}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.approve}\n              className={classes.button}\n            >\n              {messages.approveButton}\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              {messages.addCandidateTitle}\n            </Typography>\n            <TextField\n              required\n              onChange={this.setName}\n              id=\"outlined-required\"\n              label={messages.candidateField}\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={this.state.name}\n            />\n            <Button\n              disabled={\n                this.state.name.length === 0 ||\n                findIndex(\n                  this.props.candidates,\n                  item => item.name === this.state.name\n                ) >= 0\n              }\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.registerCandidate}\n              className={classes.button}\n            >\n              {messages.saveButton}\n            </Button>\n          </CardContent>\n        </Card>\n      </>\n    );\n  }\n}\nconst styles = () => ({\n  adminTile: {\n    marginTop: 60\n  },\n  title: {\n    padding: \"20px 0\"\n  },\n  card: {\n    marginTop: 20,\n    minWidth: 275,\n    width: \"80vw\"\n  },\n  button: {\n    margin: \"20px auto\",\n    display: \"block\"\n  },\n  textField: {\n    width: \"100%\"\n  }\n});\n\nconst AdminAreaStyled = withStyles(styles)(AdminArea);\n\nexport default applyContext(AdminAreaStyled);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport applyContext from \"./Context\";\n\nclass UserArea extends Component {\n  render() {\n    const { classes, user, messages } = this.props;\n    if (user.registration === \"pendingRegistration\") {\n      return (\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              {messages.requestTitle}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h5\" className={classes.title}>\n              {messages.ethAddress} {user.address}\n            </Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.props.requestApproval}\n              className={classes.button}\n            >\n              {messages.requestAccessButton}\n            </Button>\n          </CardContent>\n        </Card>\n      );\n    }\n    return null;\n  }\n}\nconst styles = () => ({\n  title: {\n    padding: \"20px 0\"\n  },\n  card: {\n    marginTop: 20,\n    minWidth: 275,\n    width: \"80vw\"\n  },\n  button: {\n    margin: \"20px auto\",\n    display: \"block\"\n  },\n  textField: {\n    width: \"100%\"\n  }\n});\n\nconst UserAreaStyled = withStyles(styles)(UserArea);\n\nexport default applyContext(UserAreaStyled);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport applyContext from \"./Context\";\n\nconst TopBar = props => {\n  const { classes, messages } = props;\n  return (\n    <AppBar className={classes.bar} position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          {messages.dappName}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst styles = () => ({\n  bar: {\n    height: 70\n  },\n  grow: {\n    flexGrow: 1\n  }\n});\n\nconst TopBarStyled = withStyles(styles)(TopBar);\nexport default applyContext(TopBarStyled);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Error = props => {\n  const { classes, message } = props;\n  return (\n    <Typography variant=\"h6\" color=\"inherit\" className={classes.error}>\n      {message}\n    </Typography>\n  );\n};\n\nconst styles = () => ({\n  error: {\n    flexGrow: 1,\n    padding: 20,\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});\n\nexport default withStyles(styles)(Error);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CandidatesCard from \"./CandidatesCard\";\nimport AdminArea from \"./AdminArea\";\nimport UserArea from \"./UserArea\";\n\nimport TopBar from \"./TopBar\";\nimport Error from \"./Error\";\n\nimport applyContext from \"./Context\";\n\nconst Home = props => {\n  const { classes, user, messages } = props;\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.main}>\n        {user.address ? (\n          <>\n            <CandidatesCard />\n            <UserArea />\n            {user.admin && <AdminArea />}\n          </>\n        ) : (\n          <Error message={messages.homeError} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst styles = () => ({\n  root: {\n    minHeight: \"100vh\",\n    flex: 1,\n    flexGrow: 1,\n    background: \"#d3d3d3\"\n  },\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nconst StyledHome = withStyles(styles)(Home);\nexport default applyContext(StyledHome);\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport utils from \"web3-utils\";\nimport { uniq } from \"lodash\";\n\nimport abi from \"../election-abi.json\";\n\nimport { Provider } from \"./Context\";\n\nimport Home from \"./Home\";\n\nimport MESSAGES from \"../messages\";\n\nconst CONTRACT = \"0x8aec984448c053d8d3ba66056593656e260b042a\";\n\nexport default class AppProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    const state = {\n      user: {},\n      candidates: [],\n      pendingVoters: []\n    };\n\n    if (window.web3) {\n      state.web3 = new Web3(window.web3.currentProvider);\n      state.contract = new state.web3.eth.Contract(abi, CONTRACT);\n    }\n\n    this.state = state;\n  }\n\n  async componentDidMount() {\n    this.getContractState();\n\n    this.timeout = setInterval(() => this.getContractState(), 2000);\n  }\n\n  componentWillUnmount() {\n    this.timeout && this.timeout();\n  }\n\n  async getContractState() {\n    const { web3, contract } = this.state;\n    if (web3 && contract) {\n      try {\n        const userAddress = await web3.eth.getCoinbase();\n        const registered = await contract.methods\n          .voterIsRegistered(userAddress)\n          .call();\n\n        const owner = await contract.methods.owner().call();\n        const userData = {\n          registration: registered ? \"pendingApproval\" : \"pendingRegistration\",\n          admin: owner.toLowerCase() === userAddress.toLowerCase(),\n          address: userAddress.toLowerCase()\n        };\n        if (registered) {\n          const approved = await contract.methods\n            .registrationIsApproved(userAddress)\n            .call();\n          if (approved) {\n            userData.registration = \"approved\";\n            const hasVoted = await contract.methods\n              .voterHasVoted(userAddress)\n              .call();\n            userData.voted = hasVoted;\n          }\n        }\n        const candidates = await this.fetchCandidates(this.state.contract);\n        const pendingVoters = await this.fetchPendingVoters();\n        this.setState({\n          pendingVoters: uniq(pendingVoters),\n          candidates,\n          user: userData\n        });\n      } catch (err) {\n        console.warn(\"err: \", err);\n      }\n    }\n  }\n\n  async fetchCandidates() {\n    const { contract } = this.state;\n    const candidates = [];\n    const count = await contract.methods.getCandidateCount().call();\n    for (let i = 0; i < count; i++) {\n      const bytesName = await contract.methods\n        .getCandidateNameForIndex(i)\n        .call();\n      const votes = await contract.methods\n        .getVoteCountForCandidate(bytesName)\n        .call();\n      candidates.push({\n        name: utils.hexToUtf8(bytesName),\n        votes\n      });\n    }\n    return candidates;\n  }\n\n  async fetchPendingVoters() {\n    const { contract } = this.state;\n    const registrations = [];\n    const count = await contract.methods.getRegistrationCount().call();\n    for (let i = 0; i < count; i++) {\n      const address = await contract.methods.getRegistrationForIndex(i).call();\n      const registered = await contract.methods\n        .registrationIsApproved(address)\n        .call();\n      if (!registered) {\n        registrations.push(address);\n      }\n    }\n    return registrations;\n  }\n\n  // Web3 Calls\n\n  vote = async name => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const hexName = utils.utf8ToHex(name);\n    const address = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .voteForCandidate(hexName)\n        .send({ from: address })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  approve = async address => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const ownAddr = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .approveRegistration(address)\n        .send({ from: ownAddr })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  addCandidate = async name => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const hexName = utils.utf8ToHex(name);\n    const address = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .addCandidate(hexName)\n        .send({ from: address })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n          this.getContractState();\n        });\n    });\n  };\n\n  requestApproval = async () => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const address = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .registerVoter()\n        .send({ from: address })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  batchApprove = async voters => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const ownAddr = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .approveRegistrations(voters)\n        .send({ from: ownAddr })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  // Render\n\n  render() {\n    if (!this.state.web3) {\n      return <span>{MESSAGES.en.homeError}</span>;\n    }\n    return (\n      <Provider\n        value={{\n          vote: this.vote,\n          approve: this.approve,\n          requestApproval: this.requestApproval,\n          addCandidate: this.addCandidate,\n          batchApprove: this.batchApprove,\n          messages: MESSAGES.en,\n          ...this.state\n        }}\n      >\n        <Home />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}