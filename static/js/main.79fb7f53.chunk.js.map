{"version":3,"sources":["components/Context.js","components/Candidate.js","components/CandidatesCard.js","components/AdminArea.js","components/UserArea.js","components/TopBar.js","components/Error.js","components/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["createContext","user","candidates","pendingVoters","vote","candidate","approve","voter","requestApproval","Provider","Consumer","Context","Component","props","react_default","a","createElement","value","Object","assign","CandidateWithStyles","withStyles","theme","badge","top","right","left","fontSize","padding","concat","spacing","unit","selected","background","color","_ref","classes","name","votes","onSelect","listClasses","push","Fragment","Divider_default","ListItem_default","role","undefined","dense","button","onClick","className","Badge_default","badgeContent","ListItemText_default","primary","CadidatesCard","state","selectCandidate","_this","registration","voted","setState","_this2","this","_this$props","Card_default","card","CardContent_default","Typography_default","variant","component","title","List_default","map","item","index","components_Candidate","key","Button_default","disabled","applyContext","marginTop","minWidth","width","margin","display","AdminArea","checked","toggleItem","indexOf","filter","toConsumableArray","batchApprove","setName","event","target","registerCandidate","addCandidate","substring","Checkbox_default","tabIndex","disableRipple","length","TextField_default","required","onChange","id","label","textField","findIndex","UserArea","address","bar","height","grow","flexGrow","AppBar_default","position","Toolbar_default","error","textAlign","message","root","minHeight","flex","main","flexDirection","alignItems","justifyContent","components_TopBar","CandidatesCard","components_UserArea","admin","components_AdminArea","components_Error","AppProvider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","regenerator_default","mark","_callee","contract","hexName","wrap","_context","prev","next","abrupt","Error","utils","utf8ToHex","Promise","resolve","reject","methods","voteForCandidate","send","from","on","receipt","stop","_x","apply","arguments","_ref2","_callee2","ownAddr","_context2","approveRegistration","_x2","_ref3","_callee3","_context3","getContractState","_x3","_callee4","_context4","registerVoter","_ref5","_callee5","voters","_context5","approveRegistrations","_x4","window","web3","Web3","currentProvider","eth","Contract","abi","timeout","setInterval","getCoinbase","userAddress","voterIsRegistered","registered","owner","userData","toLowerCase","registrationIsApproved","voterHasVoted","hasVoted","fetchCandidates","fetchPendingVoters","console","warn","_context7","t0","getCandidateCount","count","i","getCandidateNameForIndex","bytesName","getVoteCountForCandidate","hexToUtf8","registrations","getRegistrationCount","getRegistrationForIndex","objectSpread","components_Home","Boolean","location","hostname","match","ReactDOM","render","App_AppProvider","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.79fb7f53.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\n\nexport const { Provider, Consumer } = createContext({\n  user: {},\n  candidates: [],\n  pendingVoters: [],\n  vote: candidate => {\n    return null;\n  },\n  approve: voter => {\n    return null;\n  },\n  requestApproval: voter => {\n    return null;\n  }\n});\n\nexport default Component => {\n  return props => (\n    <Consumer>{value => <Component {...props} {...value} />}</Consumer>\n  );\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst Candidate = ({ classes, name, votes, onSelect, selected }) => {\n  const listClasses = [];\n  if (selected) {\n    listClasses.push(classes.selected);\n  }\n  return (\n    <>\n      <Divider />\n      <ListItem\n        role={undefined}\n        dense\n        button\n        onClick={() => onSelect(name)}\n        className={listClasses}\n      >\n        <Badge\n          color=\"primary\"\n          badgeContent={votes}\n          classes={{ badge: classes.badge }}\n        >\n          <ListItemText primary={name} className={classes.candidate} />\n        </Badge>\n      </ListItem>\n    </>\n  );\n};\n\nconst styles = theme => ({\n  badge: {\n    top: 10,\n    right: \"auto\",\n    left: 0\n  },\n  candidate: {\n    fontSize: 16,\n    padding: `10px 0 10px ${theme.spacing.unit * 4}px!important`\n  },\n  selected: {\n    background: \"yellow\",\n    color: \"white\"\n  }\n});\n\nconst CandidateWithStyles = withStyles(styles)(Candidate);\n\nexport default CandidateWithStyles;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport List from \"@material-ui/core/List\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Candidate from \"./Candidate\";\n\nimport applyContext from \"./Context\";\n\nclass CadidatesCard extends Component {\n  state = {\n    candidate: \"\"\n  };\n\n  selectCandidate = candidate => {\n    this.props.user.registration === \"approved\" &&\n      !this.props.user.voted &&\n      this.setState({ candidate });\n  };\n\n  vote = () => {\n    this.props.vote(this.state.candidate);\n    this.setState({ candidate: \"\" });\n  };\n\n  render() {\n    const { classes, candidates, user } = this.props;\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n            Candidatos à presidência da república\n          </Typography>\n          <List>\n            {candidates.map((item, index) => (\n              <Candidate\n                onSelect={this.selectCandidate}\n                selected={\n                  !user.voted &&\n                  user.registration === \"approved\" &&\n                  this.state.candidate === item.name\n                }\n                key={`candidate-${index}`}\n                name={item.name}\n                votes={item.votes}\n              />\n            ))}\n          </List>\n          {user.voted && (\n            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n              Obrigado! Seu voto já foi computado!\n            </Typography>\n          )}\n          {user.registration === \"pendingApproval\" && (\n            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n              Sua solicitação está aguardando aprovação!\n            </Typography>\n          )}\n        </CardContent>\n\n        {user.registration === \"approved\" &&\n          !user.voted && (\n            <Button\n              disabled={!this.state.candidate}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.vote}\n              className={classes.button}\n            >\n              Votar\n            </Button>\n          )}\n      </Card>\n    );\n  }\n}\nconst styles = () => ({\n  title: {\n    padding: \"20px 0\"\n  },\n  card: {\n    marginTop: 20,\n    minWidth: 275,\n    width: \"80vw\"\n  },\n  button: {\n    margin: \"20px auto\",\n    display: \"block\"\n  }\n});\n\nconst CadidatesCardStyled = withStyles(styles)(CadidatesCard);\n\nexport default applyContext(CadidatesCardStyled);\n","import React, { Component } from \"react\";\nimport { findIndex } from \"lodash\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport applyContext from \"./Context\";\n\nclass AdminArea extends Component {\n  state = {\n    checked: [],\n    name: \"\"\n  };\n\n  toggleItem = item => {\n    if (this.state.checked.indexOf(item) !== -1) {\n      this.setState({\n        checked: this.state.checked.filter(value => value !== item)\n      });\n    } else {\n      this.setState({\n        checked: [...this.state.checked, item]\n      });\n    }\n  };\n\n  approve = () => {\n    this.props.batchApprove(this.state.checked);\n    this.setState({\n      checked: []\n    });\n  };\n\n  setName = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  registerCandidate = () => {\n    this.props.addCandidate(this.state.name.substring(0, 32));\n    this.setState({ name: \"\" });\n  };\n\n  render() {\n    const { classes, pendingVoters } = this.props;\n    return (\n      <>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              Eleitores esperando aprovação.\n            </Typography>\n\n            <List>\n              {pendingVoters.map(item => (\n                <ListItem\n                  key={item}\n                  role={undefined}\n                  dense\n                  button\n                  onClick={() => this.toggleItem(item)}\n                >\n                  <Checkbox\n                    checked={this.state.checked.indexOf(item) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                  <ListItemText primary={item} />\n                </ListItem>\n              ))}\n            </List>\n            <Button\n              disabled={this.state.checked.length === 0}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.approve}\n              className={classes.button}\n            >\n              Aprovar\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              Cadastrar um candidato\n            </Typography>\n            <TextField\n              required\n              onChange={this.setName}\n              id=\"outlined-required\"\n              label=\"Nome do Candidato\"\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={this.state.name}\n            />\n            <Button\n              disabled={\n                this.state.name.length === 0 ||\n                findIndex(\n                  this.props.candidates,\n                  item => item.name === this.state.name\n                ) >= 0\n              }\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.registerCandidate}\n              className={classes.button}\n            >\n              Salvar\n            </Button>\n          </CardContent>\n        </Card>\n      </>\n    );\n  }\n}\nconst styles = () => ({\n  title: {\n    padding: \"20px 0\"\n  },\n  card: {\n    marginTop: 20,\n    minWidth: 275,\n    width: \"80vw\"\n  },\n  button: {\n    margin: \"20px auto\",\n    display: \"block\"\n  },\n  textField: {\n    width: \"100%\"\n  }\n});\n\nconst AdminAreaStyled = withStyles(styles)(AdminArea);\n\nexport default applyContext(AdminAreaStyled);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport applyContext from \"./Context\";\n\nclass UserArea extends Component {\n  render() {\n    const { classes, user } = this.props;\n    if (user.registration === \"pendingRegistration\") {\n      return (\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n              O seu endereço ETH é: {user.address}\n            </Typography>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.props.requestApproval}\n              className={classes.button}\n            >\n              Solicitar Acesso\n            </Button>\n          </CardContent>\n        </Card>\n      );\n    }\n    return null;\n  }\n}\nconst styles = () => ({\n  title: {\n    padding: \"20px 0\"\n  },\n  card: {\n    marginTop: 20,\n    minWidth: 275,\n    width: \"80vw\"\n  },\n  button: {\n    margin: \"20px auto\",\n    display: \"block\"\n  },\n  textField: {\n    width: \"100%\"\n  }\n});\n\nconst UserAreaStyled = withStyles(styles)(UserArea);\n\nexport default applyContext(UserAreaStyled);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst TopBar = props => {\n  const { classes } = props;\n  return (\n    <AppBar className={classes.bar} position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          Mainframe MeetUp - Voting Dapp\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst styles = () => ({\n  bar: {\n    height: 70\n  },\n  grow: {\n    flexGrow: 1\n  }\n});\n\nexport default withStyles(styles)(TopBar);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Error = props => {\n  const { classes, message } = props;\n  return (\n    <Typography variant=\"h6\" color=\"inherit\" className={classes.error}>\n      {message}\n    </Typography>\n  );\n};\n\nconst styles = () => ({\n  error: {\n    flexGrow: 1,\n    padding: 20,\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});\n\nexport default withStyles(styles)(Error);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CandidatesCard from \"./CandidatesCard\";\nimport AdminArea from \"./AdminArea\";\nimport UserArea from \"./UserArea\";\n\nimport TopBar from \"./TopBar\";\nimport Error from \"./Error\";\n\nimport applyContext from \"./Context\";\n\nconst Home = props => {\n  const { classes, user } = props;\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.main}>\n        {user.address ? (\n          <>\n            <CandidatesCard />\n            <UserArea />\n            {user.admin && <AdminArea />}\n          </>\n        ) : (\n          <Error message=\"Eita, parece que você não tem o MetaMask instalado, ou não está conectado na rede correta.\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst styles = () => ({\n  root: {\n    minHeight: \"100vh\",\n    flex: 1,\n    flexGrow: 1,\n    background: \"#d3d3d3\"\n  },\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nconst StyledHome = withStyles(styles)(Home);\nexport default applyContext(StyledHome);\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport utils from \"web3-utils\";\nimport abi from \"../election-abi.json\";\nimport { Provider } from \"./Context\";\n\nimport Home from \"./Home\";\n\nexport default class AppProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    const state = {\n      user: {},\n      candidates: [],\n      pendingVoters: []\n    };\n\n    if (window.web3) {\n      state.web3 = new Web3(window.web3.currentProvider);\n      state.contract = new state.web3.eth.Contract(\n        abi,\n        \"0x343fc71d8be1c399cb8aa9982cb37d3c32f1571e\"\n      );\n    }\n\n    this.state = state;\n  }\n\n  async componentDidMount() {\n    this.getContractState();\n\n    this.timeout = setInterval(() => this.getContractState(), 2000);\n  }\n\n  componentWillUnmount() {\n    this.timeout && this.timeout();\n  }\n\n  async getContractState() {\n    const { web3, contract } = this.state;\n    if (web3 && contract) {\n      try {\n        const userAddress = await web3.eth.getCoinbase();\n        const registered = await contract.methods\n          .voterIsRegistered(userAddress)\n          .call();\n\n        const owner = await contract.methods.owner().call();\n        const userData = {\n          registration: registered ? \"pendingApproval\" : \"pendingRegistration\",\n          admin: owner.toLowerCase() === userAddress.toLowerCase(),\n          address: userAddress.toLowerCase()\n        };\n        if (registered) {\n          const approved = await contract.methods\n            .registrationIsApproved(userAddress)\n            .call();\n          if (approved) {\n            userData.registration = \"approved\";\n            const hasVoted = await contract.methods\n              .voterHasVoted(userAddress)\n              .call();\n            userData.voted = hasVoted;\n          }\n        }\n        const candidates = await this.fetchCandidates(this.state.contract);\n        const pendingVoters = await this.fetchPendingVoters();\n        this.setState({\n          pendingVoters,\n          candidates,\n          user: userData\n        });\n      } catch (err) {\n        console.warn(\"err: \", err);\n      }\n    }\n  }\n\n  async fetchCandidates() {\n    const { contract } = this.state;\n    const candidates = [];\n    const count = await contract.methods.getCandidateCount().call();\n    for (let i = 0; i < count; i++) {\n      const bytesName = await contract.methods\n        .getCandidateNameForIndex(i)\n        .call();\n      const votes = await contract.methods\n        .getVoteCountForCandidate(bytesName)\n        .call();\n      candidates.push({\n        name: utils.hexToUtf8(bytesName),\n        votes\n      });\n    }\n    return candidates;\n  }\n\n  async fetchPendingVoters() {\n    const { contract } = this.state;\n    const registrations = [];\n    const count = await contract.methods.getRegistrationCount().call();\n    for (let i = 0; i < count; i++) {\n      const address = await contract.methods.getRegistrationForIndex(i).call();\n      const registered = await contract.methods\n        .registrationIsApproved(address)\n        .call();\n      if (!registered) {\n        registrations.push(address);\n      }\n    }\n    return registrations;\n  }\n\n  // Web3 Calls\n\n  vote = async name => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const hexName = utils.utf8ToHex(name);\n    const address = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .voteForCandidate(hexName)\n        .send({ from: address })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  approve = async address => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const ownAddr = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .approveRegistration(address)\n        .send({ from: ownAddr })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  addCandidate = async name => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const hexName = utils.utf8ToHex(name);\n    const address = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .addCandidate(hexName)\n        .send({ from: address })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n          this.getContractState();\n        });\n    });\n  };\n\n  requestApproval = async () => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const address = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .registerVoter()\n        .send({ from: address })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  batchApprove = async voters => {\n    const { contract } = this.state;\n    if (!contract) return new Error(\"Not connected to Web3\");\n    const ownAddr = this.state.user.address;\n    return new Promise((resolve, reject) => {\n      contract.methods\n        .approveRegistrations(voters)\n        .send({ from: ownAddr })\n        .on(\"error\", error => {\n          reject(error);\n        })\n        .on(\"receipt\", receipt => {\n          resolve(receipt);\n        });\n    });\n  };\n\n  // Render\n\n  render() {\n    if (!this.state.web3) {\n      return <span>Please install metamask to use this app.</span>;\n    }\n    return (\n      <Provider\n        value={{\n          vote: this.vote,\n          approve: this.approve,\n          requestApproval: this.requestApproval,\n          addCandidate: this.addCandidate,\n          batchApprove: this.batchApprove,\n          ...this.state\n        }}\n      >\n        <Home />\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}